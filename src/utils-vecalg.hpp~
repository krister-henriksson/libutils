


#ifndef UTILS_LINALG_HPP
#define UTILS_LINALG_HPP



#include "utils-matrix.hpp"
#include "utils-vector.hpp"

using utils::Matrix;
using utils::Vector;



namespace utils {


  // #####################################################################
  // Get rotation matrices
  // #####################################################################

  void get_rotation_matrix(Matrix<double> & R,
			   const double & th,
			   const int axis);

  void get_improper_rotation_matrix(Matrix<double> & R,
				    const double & th,
				    const int axis);

  void get_reflection_matrix(Matrix<double> & R,
			     const int axis);

  void get_rotation_matrix_u(Matrix<double> & R,
			     const Vector<double> & u,
			     const double & th
			     );

  void get_improper_rotation_matrix_u(Matrix<double> & R,
				      const Vector<double> & u,
				      const double & th
				      );

  void rotate_around_axis(const Vector<double> & axis,
			  const Vector<double> & axis_point,
			  const Vector<double> & vec,
			  const Vector<double> & vec_point,
			  const double & th,
			  Vector<double> & vec_rot,
			  Vector<double> & vec_point_rot);

  


}

#endif



